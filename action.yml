name: 'Auto Publish'

description: 'Automatically publish to NPM and create Github release'

inputs:
  github-token:
    description: "Your Github token, it's already available to your Github action"
    required: true
  npm-token:
    description: "Your Npm Publish token, if you do not wish to publish to Npm, skip this"
    required: false
  optic-url:
    description: "URL if you have a custom application that serves OTP"
    required: false
    default: "https://optic-zf3votdk5a-ew.a.run.app/api/generate/"
  optic-token:
    description: "Your Optic token. You can add your Npm secret to the Optic app, generate a new token and pass it to this input. Required only if you want to pubish to Npm and have MFA enabled for your account"
    required: false
  actor-name:
    description: "The name you want to see in the new release commit."
    required: false
    default: "${{ github.actor }}"
  actor-email:
    description: "The email you want to see in the new release commit"
    required: false
    default: "actions@users.noreply.github.com"
  semver:
    description: "The semver to use for this new release"
    required: true
    default: "patch"
  npm-tag:
    description: "If you want to release to the Npm with a custom tag, pass it here"
    required: false
    default: "latest"
  api-url:
    description: "Url of the API where the application is running"
    required: false
    default: "https://optic-release-automation-ocrlhra4va-ue.a.run.app/"
  sync-semver-tags:
    description: "If you want to keep the major and minor versions tag synced to the latest appropriate commit"
    required: false
    default: "false"

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v2
    - run: |
        git config --global user.email "${{ inputs.actor-email }}"
        git config --global user.name "${{ inputs.actor-name }}"
        npm install
      shell: 'bash'
    - uses: actions/github-script@v5
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const script = require('${{ github.action_path }}/dist/index.js')
          await script({ github, context, core, inputs: ${{ toJSON(inputs) }} })
